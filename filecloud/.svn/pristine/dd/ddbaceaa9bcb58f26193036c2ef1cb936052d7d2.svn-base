<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">
	<!-- first following line creates a rabbit connection factory with specified 
		parameters -->
	<bean id="connectionFactory"
		class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
		<constructor-arg value="${MQ_HOST}" />
		<constructor-arg value="${MQ_PORT}" />
		<property name="username" value="${MQ_USERNAME}" />
		<property name="password" value="${MQ_PASSWORD}" />
		<property name="virtualHost" value="/" />
		<property name="channelCacheSize" value="${MQ_CACHESIZE}" />
	</bean>

	<bean id="fileMQTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
		<constructor-arg ref="connectionFactory" />
		<property name="exchange" value="file.exchange" />
		<property name="routingKey" value="file.routingkey" />
		<property name="retryTemplate" ref="retryTemplate" />
	</bean>

	<bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
		<property name="backOffPolicy">
			<bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
				<property name="initialInterval" value="500" />
				<property name="multiplier" value="10.0" />
				<property name="maxInterval" value="10000" />
			</bean>
		</property>
	</bean>

	<!-- obtain admin rights to create the an exchange -->
	<!-- auto-startup="true" default -->
	<bean id="mqAdmin" class="org.springframework.amqp.rabbit.core.RabbitAdmin">
		<constructor-arg ref="connectionFactory" />
	</bean>

	<rabbit:queue id="asyncCallbackQueue" name="${MQ_QUEUE_NAME}" auto-delete="false" />
	
	<!-- <rabbit:queue id="asyncCacheCallbackQueue" name="cacheCallbackQueue" auto-delete="false" /> -->

	<!-- create myExchange and bind myAnonymousQueue with file.routingkey.1 
		to the TUTORIAL-EXCHANGE. It used to send message to route multiple queues 
		via exchange. -->
	<rabbit:topic-exchange id="callbackExchange"
		name="file.exchange" >
		<rabbit:bindings>
			<rabbit:binding queue="${MQ_QUEUE_NAME}" pattern="file.*" ></rabbit:binding>
			<!-- <rabbit:binding queue="cacheCallbackQueue" pattern="file.*" ></rabbit:binding> -->
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<!-- glue the listener and myAnonymousQueue to the container <rabbit:listener-container 
		id="messageListenerContainer" connection-factory="connectionFactory"> <rabbit:listener 
		queue-names="${MQ_QUEUE_NAME}" ref="callbackListener" method="onMessage" 
		admin="mqAdmin" /> </rabbit:listener-container> -->

	<bean
		class="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer">
		<constructor-arg ref="connectionFactory" />
		<property name="queues">
			<list>
				<ref bean="asyncCallbackQueue" />
			</list>
		</property>
		<property name="concurrentConsumers" value="5"/>
		<property name="maxConcurrentConsumers" value="${MQ_CONCURRENT_CONSUMERS}" />
		<property name="messageListener" ref="callbackListener" />
		<property name="rabbitAdmin" ref="mqAdmin" />
	</bean>

</beans>
