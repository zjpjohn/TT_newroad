<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
    http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd
    http://www.springframework.org/schema/jdbc   
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util-4.1.xsd
    ">
	<!-- 属性文件的配置 -->
	<bean id="propertiesConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/cache.properties</value>
				<value>classpath:config/mongodb.properties</value>
				<value>classpath:config/mariadb.properties</value>
				<value>classpath:config/system.properties</value>
			</list>
		</property>
	</bean>

	<bean id="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
		lazy-init="true">
		<property name="corePoolSize" value="1000" /> <!-- 最小线程数 -->
		<property name="keepAliveSeconds" value="300" /><!-- seconds -->
		<property name="maxPoolSize" value="2000" /> <!-- 最大线程数 -->
		<property name="queueCapacity" value="5000" /> <!-- 等待队列大小 -->
	</bean>

	<bean id="httpConnManager"
		class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<property name="maxTotal" value="2000" />
		<property name="defaultMaxPerRoute" value="300" />
	</bean>

	<bean id="httpClient" factory-bean="httpClientBuilder"
		factory-method="build" />

	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder"
		factory-method="create">
		<property name="connectionManager" ref="httpConnManager" />
	</bean>

	<util:list id="messageConvertersList">
		<ref bean="stringHttpMessageConverter" />
	</util:list>
	
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
		<property name="writeAcceptCharset" value="false" />
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"
		p:messageConverters-ref="messageConvertersList">
		<constructor-arg>
			<bean
				class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
				<constructor-arg ref="httpClient" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="restClient" class="com.newroad.fileext.service.FileExtendRestClient">
		<property name="restTemplate" ref="restTemplate" />
	</bean>

	<bean id="newroadCache" class="com.newroad.cache.common.couchbase.CouchbaseCache">
		<constructor-arg name="nodeipList" value="${couchbase.server.nodelist}" />
		<constructor-arg name="bucketName" value="${couchbase.server.bucket}" />
		<constructor-arg name="password" value="${couchbase.server.password}" />
		<constructor-arg name="opTimeout" value="${couchbase.server.op.timeout}" />
		<constructor-arg name="opQueueMaxBlockTime"
			value="${couchbase.server.op.queue.maxblocktime}" />
		<constructor-arg name="reconnect" value="${couchbase.server.reconnect}" />
		<constructor-arg name="persistNode"
			value="${couchbase.server.persistnode}" />
		<constructor-arg name="replicateNode"
			value="${couchbase.server.replicatenode}" />
	</bean>

	<bean id="fileStoreService" class="com.newroad.fileext.service.storage.FileManageService">
		<property name="mongoDao" ref="mongoDao" />
		<property name="newroadCache" ref="newroadCache" />
	</bean>

	<bean id="cloudSyncService" class="com.newroad.fileext.service.cloud.CloudSyncService">
		<property name="messageSender" ref="messageSender" />
	</bean>

	<bean id="messageSender" class="com.newroad.fileext.service.mq.RabbitMQSender" />

	<!-- instantiate Tutorial Listener -->
	<bean id="callbackListener" class="com.newroad.fileext.service.cloud.CloudCallbackHandler">
		<property name="mongoDao" ref="mongoDao" />
		<property name="messageSender" ref="messageSender" />
	</bean>

	<bean id="cacheCallbackListener"
		class="com.newroad.fileext.service.cloud.CacheCallbackTaskHandler">
		<property name="threadPoolTaskExecutor" ref="threadPoolTaskExecutor" />
		<property name="cacheTaskQueue" ref="cacheTaskQueue" />
	</bean>

	<bean id="cloudManageService" class="com.newroad.fileext.service.cloud.CloudManageService">
		<property name="mongoDao" ref="mongoDao" />
		<property name="newroadCache" ref="newroadCache" />
		<property name="cosDao" ref="cosDao" />
	</bean>

	<bean id="cosDao" class="com.newroad.fileext.dao.cos.COSDao" />

	<bean id="fileExtendService" class="com.newroad.fileext.service.FileExtendService">
		<property name="fileStoreService" ref="fileStoreService" />
		<property name="mongoDao" ref="mongoDao" />
		<property name="threadPoolTaskExecutor" ref="threadPoolTaskExecutor" />
		<property name="cacheTaskQueue" ref="cacheTaskQueue" />
	</bean>

	<bean id="fileResourceService" class="com.newroad.fileext.service.FileResourceService">
		<property name="fileStoreService" ref="fileStoreService" />
		<property name="fileSQLDao" ref="fileSQLDao" />
		<property name="threadPoolTaskExecutor" ref="threadPoolTaskExecutor" />
		<property name="cacheTaskQueue" ref="cacheTaskQueue" />
	</bean>

	<bean id="cacheTaskQueue" class="com.newroad.fileext.service.cloud.FileCacheTaskQueue">
		<property name="fileStoreService" ref="fileStoreService" />
		<!-- <property name="messageSender" ref="messageSender" /> -->
		<property name="cloudManageService" ref="cloudManageService" />
		<property name="threadPoolTaskExecutor" ref="threadPoolTaskExecutor" />
	</bean>

	<task:scheduler id="scheduler" pool-size="10" />
	<!--<task:scheduled-tasks scheduler="scheduler"> <task:scheduled ref="cloudManageService" 
		method="rectifyCloudResource" cron="0 0 2 * * ?" /> </task:scheduled-tasks> -->

	<!-- 定时器开关 开始 -->
	<task:annotation-driven />

	<!-- 使Spring注解 -->
	<context:annotation-config />
	<!-- 让Spring通过自动扫描来查询和管理Bean -->
	<context:component-scan base-package="com.newroad.fileext" />
</beans>