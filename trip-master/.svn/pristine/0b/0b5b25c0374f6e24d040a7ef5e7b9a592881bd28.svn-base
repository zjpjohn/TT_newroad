package com.newroad.tripmaster.dao;

import org.bson.types.ObjectId;
import org.mongodb.morphia.Datastore;
import org.mongodb.morphia.Key;
import org.mongodb.morphia.dao.BasicDAO;
import org.mongodb.morphia.mapping.Mapper;
import org.mongodb.morphia.query.Query;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.newroad.tripmaster.dao.pojo.trip.CustomizeRoute;

public class CustomizeRouteDao extends BasicDAO<CustomizeRoute, ObjectId>{

  private static Logger logger = LoggerFactory.getLogger(CustomizeRouteDao.class);
  
  protected CustomizeRouteDao(Datastore ds) {
    super(ds);
    // TODO Auto-generated constructor stub
  }
  
  public Object saveCustomizeRoute(CustomizeRoute customizeRoute) {
    Key<CustomizeRoute> key = getDs().save(customizeRoute);
    return key.getId();
  }
  
  public CustomizeRoute getCustomizeRoute(String routeId) {
    ObjectId objId=new ObjectId(routeId);
    Query<CustomizeRoute> routeQuery = getDs().find(CustomizeRoute.class).field(Mapper.ID_KEY).equal(objId);
    CustomizeRoute tripRoute = routeQuery.get();
    return tripRoute;
  }
}
