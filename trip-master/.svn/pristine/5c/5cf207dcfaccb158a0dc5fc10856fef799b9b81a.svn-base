package com.newroad.tripmaster.service.scenic;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.newroad.tripmaster.dao.CustomizeRouteDao;
import com.newroad.tripmaster.dao.TravelUserPOIDao;
import com.newroad.tripmaster.dao.TripPOIRouteDao;
import com.newroad.tripmaster.dao.TripProductDao;
import com.newroad.tripmaster.dao.pojo.trip.CustomizeRoute;
import com.newroad.tripmaster.dao.pojo.trip.POIRoute;
import com.newroad.tripmaster.dao.pojo.trip.TravelPOI;
import com.newroad.tripmaster.dao.pojo.trip.TripProduct;
import com.newroad.tripmaster.service.ProductDesignServiceIf;
import com.newroad.util.apiresult.ServiceResult;

public class ProductDesignService implements ProductDesignServiceIf {

  private static Logger logger = LoggerFactory.getLogger(ProductDesignService.class);
  
  private TripProductDao tripProductDao;
  
  private TripPOIRouteDao tripPOIRouteDao;
  
  private CustomizeRouteDao customizeRouteDao;
  
  private TravelUserPOIDao travelPOIDao;
  
  public ServiceResult<String> saveTripProduct(TripProduct tripProduct) {
    ServiceResult<String> result = new ServiceResult<String>();
    long currentTime = System.currentTimeMillis();
    tripProduct.setCreateTime(currentTime);
    tripProduct.setUpdateTime(currentTime);

    Object idObj = tripProductDao.saveTripProduct(tripProduct);
    logger.info("TripProduct object id:" + idObj);
    result.setBusinessResult(idObj.toString());
    return result;
  }

  public ServiceResult<String> saveCustomizeRoute(CustomizeRoute tripRoute) {
    ServiceResult<String> result = new ServiceResult<String>();
    long currentTime = System.currentTimeMillis();
    tripRoute.setCreateTime(currentTime);
    tripRoute.setUpdateTime(currentTime);

    Object idObj = customizeRouteDao.saveCustomizeRoute(tripRoute);
    logger.info("CustomizeRoute object id:" + idObj);
    result.setBusinessResult(idObj.toString());
    return result;
  }
  
  public ServiceResult<String> saveTripPOIRoute(POIRoute poiRoute) {
    ServiceResult<String> result = new ServiceResult<String>();
    long currentTime = System.currentTimeMillis();
    poiRoute.setCreateTime(currentTime);
    poiRoute.setUpdateTime(currentTime);

    Object idObj = tripPOIRouteDao.saveTripPOIRoute(poiRoute);
    logger.info("TripPOIRoute object id:" + idObj);
    result.setBusinessResult(idObj.toString());
    return result;
  }

  public ServiceResult<String> saveTravelUserPOI(TravelPOI travelUserPOI) {
    ServiceResult<String> result = new ServiceResult<String>();
    long currentTime = System.currentTimeMillis();
    travelUserPOI.setCreateTime(currentTime);
    travelUserPOI.setUpdateTime(currentTime);

    Object idObj = travelPOIDao.saveTravelPOI(travelUserPOI);
    logger.info("TravelUserPOI object id:" + idObj);
    result.setBusinessResult(idObj.toString());
    return result;
  }


  public void setTripProductDao(TripProductDao tripProductDao) {
    this.tripProductDao = tripProductDao;
  }

  public void setTripPOIRouteDao(TripPOIRouteDao tripPOIRouteDao) {
    this.tripPOIRouteDao = tripPOIRouteDao;
  }

  public void setCustomizeRouteDao(CustomizeRouteDao customizeRouteDao) {
    this.customizeRouteDao = customizeRouteDao;
  }

  public void setTravelPOIDao(TravelUserPOIDao travelPOIDao) {
    this.travelPOIDao = travelPOIDao;
  }



  
}
