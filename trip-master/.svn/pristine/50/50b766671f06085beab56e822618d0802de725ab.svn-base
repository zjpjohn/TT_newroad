package com.newroad.tripmaster.service.scenic;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.newroad.tripmaster.constant.JSONConvertor;
import com.newroad.tripmaster.dao.SiteDao;
import com.newroad.tripmaster.dao.TipsDao;
import com.newroad.tripmaster.dao.pojo.Site;
import com.newroad.tripmaster.dao.pojo.Tips;
import com.newroad.tripmaster.service.InfoServiceIf;
import com.newroad.util.apiresult.ServiceResult;

public class InfoService implements InfoServiceIf {

  private static Logger logger = LoggerFactory.getLogger(InfoService.class);
  
  private TipsDao tipsDao;
  private SiteDao siteDao;
  
  public ServiceResult<String> saveTips(Tips tips) {
    ServiceResult<String> result = new ServiceResult<String>();
    long currentTime = System.currentTimeMillis();
    tips.setCreatetime(currentTime);
    tips.setLastupdatedtime(currentTime);

    Object idObj = tipsDao.saveTips(tips);
    logger.info("Tips object id:" + idObj);
    result.setBusinessResult(idObj.toString());
    return result;
  }

  public ServiceResult<String> getUserTips(Long userId, String hashsiteid) {
    ServiceResult<String> result = new ServiceResult<String>();
    List<Tips> tipList=tipsDao.getUserTips(userId, hashsiteid);
    
    String json=JSONConvertor.getJSONInstance().writeValueAsString(tipList);
    logger.info("Get user tips:" + json);
    result.setBusinessResult(json);
    return result;
  }
  
  public ServiceResult<String> supportTips(Tips tips) {
    ServiceResult<String> result = new ServiceResult<String>();
    Object resultObj=tipsDao.updateTips(tips);
    logger.info("update tips:" + resultObj);
    Map<String,Object> map=new HashMap<String,Object>();
    if(resultObj!=null){
      map.put("status", 1);
    }else{
      map.put("status", 0);
    }
    String json=JSONConvertor.getJSONInstance().writeValueAsString(map);
    result.setBusinessResult(json);
    return result;
  }

  public ServiceResult<String> listScenicTips(String hashsiteid) {
    ServiceResult<String> result = new ServiceResult<String>();
    Site site=siteDao.getSiteByHash(hashsiteid);
    List<Tips> tipList=tipsDao.listScenicTips(hashsiteid);
    String json=JSONConvertor.getJSONInstance().writeValueAsString(tipList);
    logger.info("Get tips list:" + json);
    result.setBusinessResult(json);
    return result;
  }

  public void setTipsDao(TipsDao tipsDao) {
    this.tipsDao = tipsDao;
  }

  public void setSiteDao(SiteDao siteDao) {
    this.siteDao = siteDao;
  }

}
